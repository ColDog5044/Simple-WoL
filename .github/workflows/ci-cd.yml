name: "CI/CD Pipeline"

on:
  push:
    branches: [ "main", "master", "develop" ]
  pull_request:
    branches: [ "main", "master" ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Reduce matrix for faster builds
          - os: macos-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.9'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-xvfb
    
    - name: Run tests with pytest
      run: |
        python -m pytest tests/ -v --cov=src/simple_wol --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: Test modular application runs
      run: |
        python run_modular.py --help || echo "GUI test skipped (no display)"
      shell: bash

  build-executables:
    name: Build Executables
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            build-script: build.bat
            artifact-name: SimpleWoL-Windows
            executable-name: SimpleWoL.exe
          - os: ubuntu-latest
            build-script: ./build.sh
            artifact-name: SimpleWoL-Linux
            executable-name: simple-wol
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-build.txt
    
    - name: Make build script executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: chmod +x build.sh
    
    - name: Build executable
      run: python dev.py build-${{ matrix.os == 'windows-latest' && 'windows' || 'linux' }}
    
    - name: Verify executable exists
      run: |
        ls -la dist/
      shell: bash
    
    - name: Upload executable artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact-name }}
        path: |
          dist/${{ matrix.executable-name }}
          dist/SimpleWoL_dir/
          dist/simple-wol_dir/
        retention-days: 30

  release:
    name: Create Release
    needs: [test, build-executables]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Download Windows executable
      uses: actions/download-artifact@v4
      with:
        name: SimpleWoL-Windows
        path: ./dist/windows/
    
    - name: Download Linux executable
      uses: actions/download-artifact@v4
      with:
        name: SimpleWoL-Linux
        path: ./dist/linux/
    
    - name: Create release archives
      run: |
        cd dist/windows && zip -r ../../SimpleWoL-Windows.zip .
        cd ../linux && tar -czf ../../SimpleWoL-Linux.tar.gz .
    
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./SimpleWoL-Windows.zip
        asset_name: SimpleWoL-Windows.zip
        asset_content_type: application/zip
    
    - name: Upload Linux release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./SimpleWoL-Linux.tar.gz
        asset_name: SimpleWoL-Linux.tar.gz
        asset_content_type: application/gzip
